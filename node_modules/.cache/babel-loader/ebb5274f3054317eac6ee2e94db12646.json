{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\keato\\\\Documents\\\\Code\\\\React\\\\11-Resturant-App\\\\src\\\\components\\\\Meals\\\\AvailableMeals.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useCallback } from 'react';\nimport classes from './AvailableMeals.module.css';\nimport MealItem from './MealItem/MealItem';\nimport Card from '../UI/Card'; // const [meals,setMeals] = useState();\n// const [isLoading,setIsLoading] = useState();\n// const [error, setError] = useState();\n// setIsLoading(true);\n// setError(null);\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DUMMY_MEALS = [{\n  id: 'm1',\n  name: 'Sushi',\n  description: 'Finest fish and veggies',\n  price: 22.99\n}, {\n  id: 'm2',\n  name: 'Schnitzel',\n  description: 'A german specialty!',\n  price: 16.5\n}, {\n  id: 'm3',\n  name: 'Barbecue Burger',\n  description: 'American, raw, meaty',\n  price: 12.99\n}, {\n  id: 'm4',\n  name: 'Green Bowl',\n  description: 'Healthy...and green...',\n  price: 18.99\n}];\n\nconst AvailableMeals = props => {\n  _s();\n\n  const [meals, setMeals] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n  useEffect(() => {\n    const fetchMeals = async () => {\n      const response = await fetch('https://react-restaurant-app-70a9b-default-rtdb.firebaseio.com/meals.json');\n      console.log(\"Data has been logged\");\n      console.log(response);\n\n      if (!response.ok) {\n        throw new Error('Something went wrong!');\n      }\n\n      const data = response.json();\n      const loadedMeals = [];\n\n      for (const key in data) {\n        loadedMeals.push({\n          id: key,\n          name: data[key].name,\n          description: data[key].description,\n          price: data[key].price\n        });\n      }\n\n      setMeals(loadedMeals);\n      console.log(loadedMeals);\n    };\n\n    fetchMeals();\n  }, []);\n  const mealsList = meals.map(meal => /*#__PURE__*/_jsxDEV(MealItem, {\n    id: meal.key,\n    name: meal.name,\n    description: meal.description,\n    price: meal.price\n  }, meal.key, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.meals,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: mealsList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 12\n  }, this);\n};\n\n_s(AvailableMeals, \"UPRnSvazZSPzh1odbQfUBVycmtc=\");\n\n_c = AvailableMeals;\nexport default AvailableMeals;\n\nvar _c;\n\n$RefreshReg$(_c, \"AvailableMeals\");","map":{"version":3,"sources":["C:/Users/keato/Documents/Code/React/11-Resturant-App/src/components/Meals/AvailableMeals.js"],"names":["useState","useEffect","useCallback","classes","MealItem","Card","DUMMY_MEALS","id","name","description","price","AvailableMeals","props","meals","setMeals","isLoading","setIsLoading","error","setError","fetchMeals","response","fetch","console","log","ok","Error","data","json","loadedMeals","key","push","mealsList","map","meal"],"mappings":"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","sourcesContent":["import {useState, useEffect, useCallback} from 'react';\r\nimport classes from './AvailableMeals.module.css';\r\nimport MealItem from './MealItem/MealItem';\r\nimport Card from '../UI/Card';\r\n\r\n// const [meals,setMeals] = useState();\r\n// const [isLoading,setIsLoading] = useState();\r\n// const [error, setError] = useState();\r\n\r\n\r\n\r\n  // setIsLoading(true);\r\n  // setError(null);\r\n  \r\n\r\n\r\nconst DUMMY_MEALS = [\r\n  {\r\n    id: 'm1',\r\n    name: 'Sushi',\r\n    description: 'Finest fish and veggies',\r\n    price: 22.99,\r\n  },\r\n  {\r\n    id: 'm2',\r\n    name: 'Schnitzel',\r\n    description: 'A german specialty!',\r\n    price: 16.5,\r\n  },\r\n  {\r\n    id: 'm3',\r\n    name: 'Barbecue Burger',\r\n    description: 'American, raw, meaty',\r\n    price: 12.99,\r\n  },\r\n  {\r\n    id: 'm4',\r\n    name: 'Green Bowl',\r\n    description: 'Healthy...and green...',\r\n    price: 18.99,\r\n  },\r\n];\r\n\r\nconst AvailableMeals = (props) => {\r\n    const [meals, setMeals] = useState([]);  \r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [error,setError] = useState(false);\r\n\r\n \r\n useEffect(() => {\r\n  const fetchMeals = async () => {\r\n    const response = await fetch('https://react-restaurant-app-70a9b-default-rtdb.firebaseio.com/meals.json'); \r\n    console.log(\"Data has been logged\");\r\n    console.log(response);\r\n    if(!response.ok) {\r\n      throw new Error('Something went wrong!')\r\n    }\r\n    const data = response.json();\r\n    const loadedMeals = [];\r\n    for(const key in data) {\r\n      loadedMeals.push({\r\n        id:key,\r\n        name:data[key].name,\r\n        description:data[key].description,\r\n        price:data[key].price\r\n      })\r\n    }\r\n    setMeals(loadedMeals);\r\n    console.log(loadedMeals);\r\n  };\r\n    \r\n    \r\n    \r\n    fetchMeals();\r\n  }, []);\r\n  \r\n  \r\n\r\n  \r\n    const mealsList = meals.map(meal => (\r\n    <MealItem \r\n        id={meal.key}\r\n        key={meal.key}\r\n        name={meal.name}\r\n        description={meal.description} \r\n        price={meal.price} \r\n    />\r\n    ));\r\n\r\n    return <section className={classes.meals}>\r\n        <Card>\r\n        <ul>\r\n            {mealsList}\r\n        </ul>\r\n        </Card>\r\n\r\n    </section>\r\n}\r\n\r\nexport default AvailableMeals;"]},"metadata":{},"sourceType":"module"}