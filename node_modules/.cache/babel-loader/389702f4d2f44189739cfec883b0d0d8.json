{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\keato\\\\Documents\\\\Code\\\\React\\\\11-Resturant-App\\\\src\\\\components\\\\Meals\\\\AvailableMeals.js\";\nimport { useState, useEffect, useCallback } from 'react';\nimport classes from './AvailableMeals.module.css';\nimport MealItem from './MealItem/MealItem';\nimport Card from '../UI/Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst [meals, setMeals] = useState();\nconst [isLoading, setIsLoading] = useState();\nconst [error, setError] = useState();\nconst fetchFoodHandler = useCallback(async () => {\n  setIsLoading(true);\n  setError(null);\n\n  try {\n    const response = await fetch('https://react-restaurant-app-70a9b-default-rtdb.firebaseio.com/meals');\n    console.log(\"Data has been logged\");\n    console.log(response);\n\n    if (!response.ok) {\n      throw new Error('Something went wrong!');\n    }\n\n    const data = await response.json();\n    const loadedMeals = [];\n\n    for (const key in data) {\n      loadedMeals.push({\n        id: key,\n        name: data[key].name,\n        description: data[key].description,\n        price: data[key].price\n      });\n    }\n\n    console.log(\"items added\");\n    setMeals(loadedMeals);\n  } catch (error) {\n    setError(error.message);\n  }\n\n  setIsLoading(false);\n}, []);\nuseEffect(() => {\n  fetchFoodHandler();\n}, [fetchFoodHandler]);\nconst DUMMY_MEALS = [{\n  id: 'm1',\n  name: 'Sushi',\n  description: 'Finest fish and veggies',\n  price: 22.99\n}, {\n  id: 'm2',\n  name: 'Schnitzel',\n  description: 'A german specialty!',\n  price: 16.5\n}, {\n  id: 'm3',\n  name: 'Barbecue Burger',\n  description: 'American, raw, meaty',\n  price: 12.99\n}, {\n  id: 'm4',\n  name: 'Green Bowl',\n  description: 'Healthy...and green...',\n  price: 18.99\n}];\n\nconst AvailableMeals = props => {\n  const mealsList = DUMMY_MEALS.map(meal => /*#__PURE__*/_jsxDEV(MealItem, {\n    id: meal.id,\n    name: meal.name,\n    description: meal.description,\n    price: meal.price\n  }, meal.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.meals,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: mealsList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 12\n  }, this);\n};\n\n_c = AvailableMeals;\nexport default AvailableMeals;\n\nvar _c;\n\n$RefreshReg$(_c, \"AvailableMeals\");","map":{"version":3,"sources":["C:/Users/keato/Documents/Code/React/11-Resturant-App/src/components/Meals/AvailableMeals.js"],"names":["useState","useEffect","useCallback","classes","MealItem","Card","meals","setMeals","isLoading","setIsLoading","error","setError","fetchFoodHandler","response","fetch","console","log","ok","Error","data","json","loadedMeals","key","push","id","name","description","price","message","DUMMY_MEALS","AvailableMeals","props","mealsList","map","meal"],"mappings":"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","sourcesContent":["import {useState, useEffect, useCallback} from 'react';\r\nimport classes from './AvailableMeals.module.css';\r\nimport MealItem from './MealItem/MealItem';\r\nimport Card from '../UI/Card';\r\n\r\nconst [meals,setMeals] = useState();\r\nconst [isLoading,setIsLoading] = useState();\r\nconst [error, setError] = useState();\r\n\r\n\r\nconst fetchFoodHandler = useCallback( async () => { \r\n  setIsLoading(true);\r\n  setError(null);\r\n  try {\r\n   const response = await fetch('https://react-restaurant-app-70a9b-default-rtdb.firebaseio.com/meals'); \r\n   console.log(\"Data has been logged\");\r\n   console.log(response);\r\n   if(!response.ok) {\r\n     throw new Error('Something went wrong!')\r\n   }\r\n   const data = await response.json();\r\n   \r\n\r\n   const loadedMeals = [];\r\n   for(const key in data) {\r\n     loadedMeals.push({\r\n       id:key,\r\n       name:data[key].name,\r\n       description:data[key].description,\r\n       price:data[key].price\r\n       \r\n     })\r\n   }\r\n  console.log(\"items added\");\r\n  setMeals(loadedMeals);\r\n  }\r\n  catch (error) {\r\n    setError(error.message);\r\n  }\r\n  setIsLoading(false);\r\n },[])\r\n\r\n useEffect(() => {\r\n  fetchFoodHandler();\r\n}, [fetchFoodHandler]);\r\n\r\n\r\nconst DUMMY_MEALS = [\r\n  {\r\n    id: 'm1',\r\n    name: 'Sushi',\r\n    description: 'Finest fish and veggies',\r\n    price: 22.99,\r\n  },\r\n  {\r\n    id: 'm2',\r\n    name: 'Schnitzel',\r\n    description: 'A german specialty!',\r\n    price: 16.5,\r\n  },\r\n  {\r\n    id: 'm3',\r\n    name: 'Barbecue Burger',\r\n    description: 'American, raw, meaty',\r\n    price: 12.99,\r\n  },\r\n  {\r\n    id: 'm4',\r\n    name: 'Green Bowl',\r\n    description: 'Healthy...and green...',\r\n    price: 18.99,\r\n  },\r\n];\r\n\r\nconst AvailableMeals = (props) => {\r\n  \r\n    const mealsList = DUMMY_MEALS.map(meal => (\r\n    <MealItem \r\n        id={meal.id}\r\n        key={meal.id}\r\n        name={meal.name}\r\n        description={meal.description} \r\n        price={meal.price} \r\n    />\r\n    ));\r\n\r\n    return <section className={classes.meals}>\r\n        <Card>\r\n        <ul>\r\n            {mealsList}\r\n        </ul>\r\n        </Card>\r\n\r\n    </section>\r\n}\r\n\r\nexport default AvailableMeals;"]},"metadata":{},"sourceType":"module"}