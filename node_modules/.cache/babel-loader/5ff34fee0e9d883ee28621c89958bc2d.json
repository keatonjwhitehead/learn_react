{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\keato\\\\Documents\\\\Code\\\\React\\\\11-Resturant-App\\\\src\\\\store\\\\CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport { useReducer } from 'react';\nimport CartContext from './cart-context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n}; //action is given by the manipulation your code does, where as state is the last snapshot of the known data\n\nconst cartReducer = (state, action) => {\n  if (action.type === 'ADD') {\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    const existingCartItemIndex = state.items.findIndex(item => item.id === action.item.isbn);\n    const existingCartItem = state.items[existingCartItemIndex];\n    let updatedItems;\n    console.log(state.items);\n\n    if (existingCartItem) {\n      const updatedItem = { ...existingCartItem,\n        amount: existingCartItem.amount + action.item.amount\n      };\n      updatedItems = [...state.items];\n      console.log(updatedItem);\n      updatedItems[existingCartItemIndex] = updatedItem;\n    } else {\n      updatedItems = state.items.concat(action.item);\n    }\n\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  if (action.type === \"REMOVE\") {\n    const existingCartItemIndex = state.items.findIndex(item => item.id === action.id);\n    const existingItem = state.items[existingCartItemIndex];\n    const updatedTotalAmount = state.totalAmount - existingItem.price;\n    let updatedItems;\n\n    if (existingItem.amount === 1) {\n      updatedItems = state.items.filter(item => item.id != action.id);\n    } else {\n      const updatedItem = { ...existingItem,\n        amount: existingItem.amount - 1\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingCartItemIndex] = updatedItem;\n    }\n\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  return defaultCartState;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n\n  const addItemToCartHandler = item => {\n    dispatchCartAction({\n      type: 'ADD',\n      item: item\n    });\n  };\n\n  const removeItemFromCartHandler = id => {\n    dispatchCartAction({\n      type: 'REMOVE',\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CartProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["C:/Users/keato/Documents/Code/React/11-Resturant-App/src/store/CartProvider.js"],"names":["useReducer","CartContext","defaultCartState","items","totalAmount","cartReducer","state","action","type","updatedTotalAmount","item","price","amount","existingCartItemIndex","findIndex","id","isbn","existingCartItem","updatedItems","console","log","updatedItem","concat","existingItem","filter","CartProvider","props","cartState","dispatchCartAction","addItemToCartHandler","removeItemFromCartHandler","cartContext","addItem","removeItem","children"],"mappings":"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","sourcesContent":["import {useReducer} from 'react';\r\n\r\nimport CartContext from './cart-context';\r\n\r\nconst defaultCartState = {\r\n    items: [],\r\n    totalAmount: 0\r\n}\r\n\r\n//action is given by the manipulation your code does, where as state is the last snapshot of the known data\r\nconst cartReducer = (state, action) => {\r\n    if(action.type==='ADD'){\r\n        const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\r\n        const existingCartItemIndex = state.items.findIndex(\r\n            (item) => item.id === action.item.isbn\r\n            );\r\n        const existingCartItem = state.items[existingCartItemIndex];\r\n        let updatedItems;\r\n        console.log(state.items);\r\n       \r\n        if(existingCartItem) {\r\n            const updatedItem = {\r\n                ...existingCartItem,\r\n                amount:existingCartItem.amount + action.item.amount\r\n            };\r\n            updatedItems = [...state.items];\r\n            console.log(updatedItem);\r\n            updatedItems[existingCartItemIndex] = updatedItem;\r\n        }\r\n        else {\r\n            updatedItems = state.items.concat(action.item);\r\n        }\r\n           \r\n        return {\r\n            items: updatedItems,\r\n            totalAmount: updatedTotalAmount\r\n        };\r\n    }\r\n    if(action.type === \"REMOVE\"){\r\n        const existingCartItemIndex = state.items.findIndex(\r\n            (item) => item.id === action.id\r\n        );\r\n        const existingItem = state.items[existingCartItemIndex];\r\n        const updatedTotalAmount = state.totalAmount - existingItem.price;\r\n        let updatedItems;\r\n        if(existingItem.amount === 1){\r\n            updatedItems = state.items.filter(\r\n                (item) => item.id != action.id\r\n            );\r\n        }\r\n        else {\r\n            const updatedItem = {...existingItem, amount: existingItem.amount-1};\r\n            updatedItems = [...state.items];\r\n            updatedItems[existingCartItemIndex] = updatedItem;\r\n        }\r\n        return {\r\n            items: updatedItems,\r\n            totalAmount:updatedTotalAmount\r\n        }\r\n    }\r\n\r\n    return defaultCartState;\r\n    \r\n}\r\nconst CartProvider = (props) => {\r\n    const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\r\n    const addItemToCartHandler = (item) => {\r\n        dispatchCartAction({type: 'ADD', item: item})\r\n    };\r\n    const removeItemFromCartHandler = (id) => {\r\n        dispatchCartAction({type: 'REMOVE', id: id})\r\n        \r\n    };\r\n    const cartContext = {\r\n        items: cartState.items,\r\n        totalAmount: cartState.totalAmount,\r\n        addItem:addItemToCartHandler,\r\n        removeItem:removeItemFromCartHandler\r\n    };\r\n    return (\r\n        <CartContext.Provider value={cartContext}>\r\n            {props.children}\r\n        </CartContext.Provider>\r\n    )\r\n};\r\n\r\nexport default CartProvider; "]},"metadata":{},"sourceType":"module"}