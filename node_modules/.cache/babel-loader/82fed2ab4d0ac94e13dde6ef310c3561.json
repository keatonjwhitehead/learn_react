{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\keato\\\\Documents\\\\Code\\\\React\\\\12-Library-app\\\\src\\\\store\\\\cartProvider.js\",\n    _s = $RefreshSig$();\n\nimport { useReducer, useContext } from 'react';\nimport CartContext from './cart-context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalCount: 0\n}; //action is given by the manipulation your code does, where as state is the last snapshot of the known data\n\nconst cartReducer = (state, action) => {\n  if (action.type === \"ADD\") {\n    const updatedCount = state.totalCount + action.item.amount;\n    const existingCartItemIndex = state.items.findIndex(item => item.isbn === action.item.isbn);\n    const existingCartItem = state.items[existingCartItemIndex];\n    let updatedItems;\n\n    if (existingCartItem) {\n      const updatedItem = { ...existingCartItem,\n        amount: Number(existingCartItem.amount) + Number(action.item.amount)\n      };\n      console.log(updatedItem);\n      updatedItems = [...state.items];\n      updatedItems[existingCartItemIndex] = updatedItem;\n    } else {\n      updatedItems = state.items.concat(action.item);\n    }\n\n    return {\n      items: updatedItems,\n      totalCount: updatedCount\n    };\n  }\n\n  if (action.type === \"REMOVE\") {\n    console.log(\"Check one\");\n    console.log(action);\n    const existingCartItemIndex = state.items.findIndex(item => item.isbn === action.isbn);\n    const existingItem = state.items[existingCartItemIndex];\n    const updatedCount = state.totalCount - 1;\n    let updatedItems;\n\n    if (existingItem === 1) {\n      updatedItems = state.items.filter(item => item.isbn != action.item.isbn);\n    } else {\n      console.log(\"hello\");\n      console.log(existingItem);\n      const updatedItem = { ...existingItem,\n        amount: existingItem.amount - 1\n      };\n      updatedItems = [...state.items];\n      updatedItems = [existingCartItemIndex] = updatedItem;\n    }\n\n    return {\n      items: updatedItems,\n      totalAmount: updatedCount\n    };\n  }\n\n  return defaultCartState;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n\n  const addItemToCartHandler = item => {\n    dispatchCartAction({\n      type: \"ADD\",\n      item: item\n    });\n  };\n\n  const removeItemFromCartHandler = id => {\n    dispatchCartAction({\n      type: \"REMOVE\",\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalCount: cartState.totalCount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CartProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["useReducer","useContext","CartContext","defaultCartState","items","totalCount","cartReducer","state","action","type","updatedCount","item","amount","existingCartItemIndex","findIndex","isbn","existingCartItem","updatedItems","updatedItem","Number","console","log","concat","existingItem","filter","totalAmount","CartProvider","props","cartState","dispatchCartAction","addItemToCartHandler","removeItemFromCartHandler","id","cartContext","addItem","removeItem","children"],"sources":["C:/Users/keato/Documents/Code/React/12-Library-app/src/store/cartProvider.js"],"sourcesContent":["import {useReducer, useContext} from 'react';\r\n\r\nimport CartContext from './cart-context';\r\n\r\nconst defaultCartState = {\r\n    items: [],\r\n    totalCount: 0\r\n}\r\n\r\n//action is given by the manipulation your code does, where as state is the last snapshot of the known data\r\nconst cartReducer = (state, action) => {\r\n    if(action.type === \"ADD\"){\r\n        const updatedCount = state.totalCount + action.item.amount;\r\n        const existingCartItemIndex = state.items.findIndex(\r\n            (item) => item.isbn === action.item.isbn\r\n        );\r\n        const existingCartItem = state.items[existingCartItemIndex];\r\n        let updatedItems;\r\n        if(existingCartItem) {\r\n            const updatedItem = {\r\n                ...existingCartItem,\r\n                amount:Number(existingCartItem.amount) + Number(action.item.amount),\r\n            };\r\n            console.log(updatedItem);\r\n            updatedItems = [...state.items];\r\n            updatedItems[existingCartItemIndex] = updatedItem;\r\n            \r\n        }\r\n        else {\r\n            updatedItems = state.items.concat(action.item);\r\n            \r\n        }\r\n        return{\r\n            items: updatedItems,\r\n            totalCount: updatedCount\r\n        }\r\n\r\n    }\r\n    if(action.type === \"REMOVE\"){\r\n        console.log(\"Check one\");\r\n        console.log(action);\r\n        const existingCartItemIndex = state.items.findIndex(\r\n            (item) => item.isbn === action.isbn\r\n        );\r\n        const existingItem = state.items[existingCartItemIndex];\r\n        const updatedCount = state.totalCount - 1;\r\n        let updatedItems;\r\n        if(existingItem === 1){\r\n            updatedItems = state.items.filter(\r\n                (item) => item.isbn != action.item.isbn\r\n            );\r\n        }\r\n        else {\r\n            console.log(\"hello\");\r\n            console.log(existingItem);\r\n            const updatedItem = {...existingItem, amount: existingItem.amount-1};\r\n            updatedItems = [...state.items];\r\n            updatedItems = [existingCartItemIndex] = updatedItem;\r\n            \r\n        }\r\n        return {\r\n            items: updatedItems,\r\n            totalAmount: updatedCount\r\n        }\r\n    }\r\n    return defaultCartState;\r\n}\r\n\r\n\r\n\r\nconst CartProvider = (props) => {\r\n    const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\r\n    const addItemToCartHandler = (item) => {\r\n        dispatchCartAction({type: \"ADD\", item:item});\r\n    }\r\n    const removeItemFromCartHandler = (id) => {\r\n        dispatchCartAction({type: \"REMOVE\", id:id});\r\n    }\r\n\r\n    const cartContext = {\r\n        items:cartState.items,\r\n        totalCount:cartState.totalCount,\r\n        addItem: addItemToCartHandler,\r\n        removeItem:removeItemFromCartHandler,\r\n    };\r\n    return (\r\n        <CartContext.Provider value={cartContext}>\r\n            {props.children}\r\n        </CartContext.Provider>\r\n    )\r\n};\r\n\r\nexport default CartProvider; "],"mappings":"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"},"metadata":{},"sourceType":"module"}